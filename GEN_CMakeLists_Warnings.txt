# --------------------------------------------------------------------
# CMakeLists_Warning.txt to GEN FrameWork
# --------------------------------------------------------------------


# --------------------------------------------------------------------
# Windows

if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")

  add_compile_options(/wd4018)                              # warning C4018: '>': signed/unsigned mismatch
  add_compile_options(/wd4091)                              # warning C4091: 'typedef ': ignored on left of 'xxx' when no variable is declared
  add_compile_options(/wd4595)                              # warning C4595: 'xxx': non-member operator new or delete functions may not be declared inline
  add_compile_options(/wd4996)                              # warning C4996: 'xxx': was declared deprecated
  add_compile_options(/wd4624)                              # warning C4624: 'xxx' destructor was implicitly defined as deleted
    
  if(APPMODE_WINDOWS_DINAMIC)
    add_compile_options(/wd4251)                            # warning C4251: needs to have dll-interface to be used by clients of class 'xxxxxxxx'
  endif()

#add_compile_options(/wd4172)                               # warning C4172: returning address of local variable or temporary: var

endif()


# --------------------------------------------------------------------
# Linux

if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")

 #add_compile_options(-Wreturn-local-addr)                  # warning: reference to local variable ‘var’ returned [-Wreturn-local-addr]
  
endif()


# --------------------------------------------------------------------
# All platforms

if(COMPILE_WITH_CLANG)
 
  list(APPEND WARNINGS_CLANG "-Wno-invalid-source-encoding")
 #list(APPEND WARNINGS_CLANG "-Wno-writable-strings")
 #list(APPEND WARNINGS_CLANG "-Wno-delete-incomplete")
 #list(APPEND WARNINGS_CLANG "-Wno-microsoft-extra-qualification")
 #list(APPEND WARNINGS_CLANG "-Wno-comment")  
  
 #list(APPEND WARNINGS_CLANG "-Wno-unused-variable") 
 #list(APPEND WARNINGS_CLANG "-ferror-limit=1000")
  
  add_compile_options(${WARNINGS_CLANG})  
  message(STATUS "< Warnings CLANG deactivated: ${WARNINGS_CLANG} >")

endif()
