# --------------------------------------------------------------------
# GEN_CMakeLists_Main_Sources_Windows.txt
# Main Part: Add Sources Windows
# --------------------------------------------------------------------


list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/MainProcWINDOWS.cpp")


if(GRP_FEATURE)       

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/GRPWINDOWSFactory.cpp")
  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/GRPWINDOWSScreen.cpp")

endif()


if(INP_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/INPWINDOWSFactory.cpp")
  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/INPWINDOWSDeviceMouse.cpp")
  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/INPWINDOWSDeviceKeyboard.cpp")

endif()


if(INP_SIMULATE_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/INPWINDOWSSimulate.cpp")  

endif()


if(INP_CAPTURE_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/INPWINDOWSCapture.cpp")  

endif()


 if(SND_FEATURE)
  
   list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/SNDWINDOWSFactory.cpp")
      
 endif()


if(DIO_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSFactory.cpp")

endif()


if(DIO_PING_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSPing.cpp")

endif()


if(DIO_STREAMUART_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamUART.cpp")  
  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamUARTLocalEnumDevices.cpp")

endif()


if(DIO_STREAMUSB_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamUSB.cpp")  
  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamUSBLocalEnumDevices.cpp")

endif()


if(DIO_STREAMI2C_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamI2C.cpp")    

endif()


if(DIO_STREAMSPI_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamSPI.cpp")    

endif()


if(DIO_STREAMICMP_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamICMP.cpp")

endif()


if(DIO_STREAMUDP_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamUDP.cpp")    

endif()


if(DIO_STREAMTCPIP_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamTCPIP.cpp") 
  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamIPLocalEnumDevices.cpp")

endif()


if(DIO_STREAMBLUETOOTH_FEATURE OR DIO_STREAMBLUETOOTHLE_FEATURE)            

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamBluetooth.cpp")
  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamBluetoothLocalEnumDevices.cpp")      

endif()


if(DIO_STREAMBLUETOOTH_FEATURE)            

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamBluetoothRemoteEnumDevices.cpp")

endif()


if(DIO_STREAMBLUETOOTHLE_FEATURE)            

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamBluetoothLERemoteEnumDevices.cpp")

endif()


if(DIO_STREAMWIFI_FEATURE)            

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSStreamWifiRemoteEnumDevices.cpp")    

endif()


if(DIO_WIFIMANAGERMODE_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSWifiManagerMode.cpp")

endif()


if(DIO_GPIO_FEATURE)

  if(DIO_GPIO_PCPARALLEL_FEATURE)

    list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSGPIOPCParallel.cpp") 

  endif()

endif()


if(DIO_PCAP_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSPCap.cpp")      

endif()


if(DIO_NOTIFICATIONS_MANAGER_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/DIOWINDOWSNotificationsManager.cpp")

endif()


list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSFactory.cpp")
list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSTrace.cpp")
list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSTimer.cpp")
list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSRand.cpp")
list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSDir.cpp")
list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSThread.cpp")
list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSDateTime.cpp")
list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSAccessControlLists.cpp")
list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSServiceBase.cpp") 
list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSRegistryManager.cpp")
list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSWMIInterface.cpp") 

if(DEBUG_FEATURE)

  option(WINDOWS_STACKWALKER_FEATURE "Windows Stack Walcker Manager"  true )

endif()


if(XSYSTEM_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSSystem.cpp")

endif()


if(XSLEEP_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSSleep.cpp")

endif()


if(XCONSOLE_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSConsole.cpp")

endif()


if(XFILE_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSFile.cpp")

endif()


if(XPROCESSMANAGER_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSProcessManager.cpp")

endif()


if(XSHAREDMEMORYMANAGER_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSSharedMemoryManager.cpp")

endif()


if(XDRIVEIMAGEMANAGER_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSDriveImageManager.cpp")

endif()


if(XEEPROMMEMORYMANAGER_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSEEPROMMemoryManager.cpp")

endif()


if(WINDOWS_XDESKTOPMANAGER_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSDesktopManager.cpp")

endif()


if(WINDOWS_XVIRTUALDESKTOPMANAGER_FEATURE)

  list(APPEND GEN_SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_WINDOWS}/XWINDOWSVirtualDesktopManager.cpp")

endif()



