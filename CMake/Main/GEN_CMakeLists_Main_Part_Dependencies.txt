# --------------------------------------------------------------------
# GEN_Part_Dependencies.txt
# Main Part: Dependencies 
# --------------------------------------------------------------------


add_definitions(-DUNICODE)


# --------------------------------------------------------------------
# Platforms General

if(COMPILE_FOR_WINDOWS)
  
  option(XFILE_FEATURE              "XFile"                       true)
  option(XTRANSLATION_FEATURE       "Translation"                 true)        
     
endif()


if(COMPILE_FOR_LINUX)
 
  option(XFILE_FEATURE              "XFile"                       true)
  option(XTRANSLATION_FEATURE       "Translation"                 true)  
   
  option(XPROCESSMANAGER_FEATURE    "Process Manager"             true)    # TO REVISATED 
  
endif()

 
if(COMPILE_FOR_ANDROID)      

  option(XTRANSLATION_FEATURE       "Translation"                 true)  
 
endif()   


if(COMPILE_FOR_STM32)
 
endif()


if(COMPILE_FOR_ESP32)

  option(XSLEEP_FEATURE             "Sleep functions"             true)
  option(XSYSTEM_FEATURE            "System functions"            true)
  option(XTRANSLATION_FEATURE       "Translation"                 true) 

endif()


# --------------------------------------------------------------------
# App Modes

if(APPMODE_SERVICE_FEATURE)

  add_definitions(-DAPPMODE_SERVICE)  

endif()


if(APPMODE_LIBRARY_DINAMIC_FEATURE)
  
  add_definitions(-DAPPMODE_LIBRARY_DINAMIC)
  option(APPMODE_API_LIB_FEATURE "Activates the export/import of classes in a library" true)
  option(APPMODE_API_LIB_EXPORT_FEATURE "Activates the export of classes in a library" true)  

endif()


if(APPMODE_API_LIB_FEATURE)

  add_definitions(-DAPPMODE_API_LIB_ACTIVE) 

  if(APPMODE_API_LIB_EXPORT_FEATURE)
    
    add_definitions(-DAPPMODE_API_LIB_EXPORT_ACTIVE)  

  endif()   

endif()   


# --------------------------------------------------------------------
# Application 

if(APP_FEATURE)

  add_definitions(-DAPP_ACTIVE)
  option(XPUBLISHER_FEATURE   "XPublisher"        true)
  option(XSYSTEM_FEATURE      "System functions"  true)


  if(APP_CONSOLE_FEATURE)
    
    add_definitions(-DAPP_CONSOLE_ACTIVE)
    option(XCONSOLE_FEATURE   "Console functions" true)
  
  endif()
        
        
  if(APP_GRAPHICS_FEATURE) 

    add_definitions(-DAPP_GRAPHICS_ACTIVE)
    option(XFSMACHINE_FEATURE "XFSMachine"        true)
    option(GRP_FEATURE        "Graphics"          true)
    option(GRP_2D_FEATURE     "Graphics 2D"       true)
  
  endif()

  
  if(APP_CHECKRESOURCESHARDWARE_FEATURE)

    add_definitions(-DAPP_CHECKRESOURCESHARDWARE_ACTIVE)
    option(XSCHEDULER_FEATURE "XScheduler" true)

  endif()


  if(APP_INTERNETSERVICES_FEATURE)

    add_definitions(-DAPP_INTERNETSERVICES_ACTIVE)
    option(DIO_CHECKCONNECTIONS_FEATURE   "Check Connections"   true)
    option(XSCHEDULER_FEATURE             "XScheduler"          true)

  endif()


  if(APP_LOG_FEATURE)

    add_definitions(-DAPP_LOG_ACTIVE)
  
  endif()


  if(APP_WEBSERVER_FEATURE)

    add_definitions(-DAPP_WEBSERVER_ACTIVE)
  
  endif()


  if(APP_UPDATE_FEATURE)

    add_definitions(-DAPP_UPDATE_ACTIVE)
    option(DIO_APPLICATIONUPDATE_FEATURE "Application Update" true)

  endif()


  if(APP_ALERTS_FEATURE)

    add_definitions(-DAPP_ALERTS_ACTIVE)

  endif()


endif()


# --------------------------------------------------------------------
# Application CFG

if(APP_CFG_REMOTEFILE_FEATURE               OR
   APP_CFG_GENERAL_FEATURE                  OR 
   APP_CFG_LOG_FEATURE                      OR
   APP_CFG_INTERNETSERVICES_FEATURE         OR 
   APP_CFG_DYNDNSMANAGER_FEATURE            OR
   APP_CFG_WEBSERVER_FEATURE                OR
   APP_CFG_CHECKRESOURCESHARDWARE_FEATURE   OR
   APP_CFG_LOCATION_FEATURE                 OR
   APP_CFG_DNSRESOLVED_FEATURE              OR
   APP_CFG_ALERTS_FEATURE                   OR
   APP_CFG_APPUPDATE_FEATURE)
 

  add_definitions(-DAPP_CFG_ACTIVE)
  option(APP_CFG_FEATURE "Application CFG" true) 


  if(APP_CFG_SCRIPTS_FEATURE)

    add_definitions(-DAPP_CFG_SCRIPTS_ACTIVE)
    
  endif()

 
  if(APP_CFG_LOG_FEATURE)

    add_definitions(-DAPP_CFG_LOG_ACTIVE)
    option(XLOG_FEATURE "LOG File" true)

  endif()


  if(APP_CFG_REMOTEFILE_FEATURE)

    add_definitions(-DAPP_CFG_REMOTEFILE_ACTIVE)
    option(XFILE_CFG_FEATURE "XFile Config format" true)
    option(DIO_WEBCLIENT_FEATURE "Web Client" true)

  endif()


  if(APP_CFG_GENERAL_FEATURE)

    add_definitions(-DAPP_CFG_GENERAL_ACTIVE)
    option(XFILE_CFG_FEATURE "XFile Config format" true)

  endif()


  if(APP_CFG_LOG_FEATURE)

    add_definitions(-DAPP_CFG_LOG_ACTIVE)  
    option(APP_LOG_FEATURE "Application Log" true)
    option(XLOG_FEATURE "LOG File" true)
    option(XFILE_CFG_FEATURE "XFile Config format" true)

  endif()


  if(APP_CFG_INTERNETSERVICES_FEATURE)

    add_definitions(-DAPP_CFG_INTERNETSERVICES_ACTIVE)
    option(HASH_FEATURE "HASH" true)
    option(APP_INTERNETSERVICES_FEATURE "Application Internet Services" true)
    option(XFILE_CFG_FEATURE "XFile Config format" true)
    option(DIO_CHECKCONNECTIONS_FEATURE "Check Connections" true)
    option(DIO_NETWORKTINEPROTOCOL_FEATURE "Network Time Protocol" true)

  endif()


  if(APP_CFG_DYNDNSMANAGER_FEATURE)

    add_definitions(-DAPP_CFG_DYNDNSMANAGER_ACTIVE)

  endif()


  if(APP_CFG_WEBSERVER_FEATURE)

    add_definitions(-DAPP_CFG_WEBSERVER_ACTIVE)
    option(XFILE_CFG_FEATURE "XFile Config format" true)

  endif()


  if(APP_CFG_CHECKRESOURCESHARDWARE_FEATURE)

    add_definitions(-DAPP_CFG_CHECKRESOURCESHARDWARE_ACTIVE)
    option(APP_CHECKRESOURCESHARDWARE_FEATURE "Application Check Resources Hardware" true)
    option(XFILE_CFG_FEATURE "XFile Config format" true)

  endif()


  if(APP_CFG_LOCATION_FEATURE)

    add_definitions(-DAPP_CFG_LOCATION_ACTIVE)
    option(XFILE_CFG_FEATURE "XFile Config format" true)

  endif()


  if(APP_CFG_DNSRESOLVED_FEATURE)

    add_definitions(-DAPP_CFG_DNSRESOLVED_ACTIVE)
    option(XFILE_CFG_FEATURE "XFile Config format" true)

  endif()


  if(APP_CFG_ALERTS_FEATURE)

    add_definitions(-DAPP_CFG_ALERTS_ACTIVE)
    option(APP_ALERTS_FEATURE "Application Alerts" true)
    option(XFILE_CFG_FEATURE "XFile Config format" true)

  endif()


  if(APP_CFG_APPUPDATE_FEATURE)

    add_definitions(-DAPP_CFG_APPUPDATE_ACTIVE)
    option(APP_UPDATE_FEATURE "Application Update" true)
    option(XFILE_CFG_FEATURE "XFile Config format" true)

  endif()
  
endif()


# --------------------------------------------------------------------
# User Interface

if(USERINTERFACE_FEATURE)

  add_definitions("-DUSERINTERFACE_ACTIVE")

  if(USERINTERFACE_DEBUG_FEATURE)

    add_definitions("-DUSERINTERFACE_DEBUG")
  
  endif()

  option(XPUBLISHER_FEATURE   "XPublisher"          true)
  option(XFSMACHINE_FEATURE   "XFSMachine"          true)
  option(XFILE_XML_FEATURE    "XFile XML format"    true)
  option(XFILE_ZIP_FEATURE    "XFile Zip format"    true)  
 
endif()


# --------------------------------------------------------------------
# Scripts

if(SCRIPT_FEATURE)
  
  add_definitions("-DSCRIPT_ACTIVE")

  option(XPUBLISHER_FEATURE       "XPublisher"          true)
  option(XFSMACHINE_FEATURE       "XFSMachine"          true)
  option(XCONSOLE_FEATURE         "Console functions"   true) 
  option(XPROCESSMANAGER_FEATURE  "Process Manager"     true)


  if(SCRIPT_LIB_SYSTEM_FEATURE)

    add_definitions("-DSCRIPT_LIB_SYSTEM_ACTIVE")
    
  endif()


  if(SCRIPT_LIB_PROCESS_FEATURE)

    add_definitions("-DSCRIPT_LIB_PROCESS_ACTIVE")
    
  endif()

  
  if(SCRIPT_LIB_LOG_FEATURE)

    add_definitions("-DSCRIPT_LIB_LOG_ACTIVE")
    
  endif()


  if(SCRIPT_LIB_CONSOLE_FEATURE)

    add_definitions("-DSCRIPT_LIB_CONSOLE_ACTIVE")
    
  endif()


  if(SCRIPT_LIB_WINDOW_FEATURE)

    add_definitions("-DSCRIPT_LIB_WINDOW_ACTIVE")
    option(GRP_FEATURE              "Graphics"                    true)
    option(GRP_2D_FEATURE           "Activate Graphics 2D"        true)
    option(GRP_BITMAP_FILE_FEATURE  "Graphics Files Bitmap Type"  true)
    
  endif()


  if(SCRIPT_LIB_CFG_FEATURE)

    add_definitions("-DSCRIPT_LIB_CFG_ACTIVE")
    
  endif()


  if(SCRIPT_LIB_INPUTSIMULATE_FEATURE)

    add_definitions("-DSCRIPT_LIB_INPUTSIMULATE_ACTIVE")
    option(INP_FEATURE            "Inputs"            true)
    option(INP_SIMULATE_FEATURE   "Inputs Simulate"   true) 
    
  endif()


  if(SCRIPT_G_FEATURE)

    add_definitions("-DSCRIPT_G_ACTIVE")
    
  endif()


  if(SCRIPT_LUA_FEATURE)

    add_definitions("-DSCRIPT_LUA_ACTIVE")
    
  endif()


  if(SCRIPT_JAVASCRIPT_FEATURE)

    add_definitions("-DSCRIPT_JAVASCRIPT_ACTIVE")
    
  endif()


endif()


# --------------------------------------------------------------------
# Databases

if(DATABASES_SQL_FEATURE)  

  add_definitions(-DDB_SQL_ACTIVE)
  option(XPUBLISHER_FEATURE "XPublisher" true)
  option(XFSMACHINE_FEATURE "XFSMachine" true)

  if(DATABASES_SQL_SQLITE_FEATURE)

    add_definitions(-DDB_SQLITE_ACTIVE)
    option(DATABASES_SQL "DataBases SQL" true)

  endif()


  if(DATABASES_SQL_MYSQL_FEATURE)

    add_definitions(-DDB_MYSQL_ACTIVE)
    option(DATABASES_SQL "DataBases SQL" true)

  endif()


  if(DATABASES_SQL_POSTGRESQL_FEATURE)

    add_definitions(-DDB_POSTGRESQL_ACTIVE)
    option(DATABASES_SQL "DataBases SQL" true)

  endif()

endif()




# --------------------------------------------------------------------
# Input 

if(INP_SIMULATE_FEATURE)

  add_definitions(-DINP_SIMULATE_ACTIVE)
  option(INP_FEATURE "Inputs" true)

endif()


if(INP_CAPTURE_FEATURE)

  add_definitions(-DINP_CAPTURE_ACTIVE)
  option(INP_FEATURE "Inputs" true)
  
endif()


if(INP_FEATURE)

  add_definitions(-DINP_ACTIVE)

  if(COMPILE_FOR_LINUX)

    option(GRP_FEATURE "Graphics" true)
    option(GRP_2D_FEATURE   "Activate Graphics 2D"    true)

  endif()

endif()


# --------------------------------------------------------------------
# Graphics 

if(GRP_FEATURE)

  add_definitions(-DGRP_ACTIVE)
  add_definitions(-DFT_DEBUG_LEVEL_ERROR)
  add_definitions(-DFT_DEBUG_LEVEL_TRACE)
  add_definitions(-DFT2_BUILD_LIBRARY)

endif()


if(GRP_VIDEO_FILE_FEATURE)
  
  add_definitions(-DGRP_VIDEO_FILE_ACTIVE)

  if(GRP_VIDEO_FILE_AVI_FEATURE)

    add_definitions(-DGRP_VIDEO_FILE_AVI_ACTIVE)
    option(XFILE_RIFF_FEATURE "XFile RIFF format"  true)

  endif()

endif()


if(GRP_OPENGL_FEATURE)

  add_definitions(-DGRP_OPENGL_ACTIVE)

endif()


# --------------------------------------------------------------------
# Sound 

if(SND_FEATURE)

  add_definitions(-DSND_ACTIVE)

  if(SND_FILE_OGG_FEATURE)

    add_definitions(-DSND_FILE_OGG_ACTIVE)

  endif()

  if(SND_FILE_WAV_FEATURE)

    add_definitions(-DSND_FILE_WAV_ACTIVE)

  endif()

endif()


# --------------------------------------------------------------------
# eXtended Utils    
    
if(XTRACE_FEATURE)

  add_definitions(-DXTRACE_ACTIVE)

  if(XTRACE_NOINTERNET_FEATURE)
  
    add_definitions(-DXTRACE_NOINTERNET)  
	
  endif()
 
  if((COMPILE_FOR_WINDOWS) OR (COMPILE_FOR_LINUX) OR (COMPILE_FOR_ANDROID))
  
    option(DIO_FEATURE              "Data Input/Output" true)
    option(DIO_DNSRESOLVED_FEATURE  "DNS Resolved"      true)
    option(DIO_WEBCLIENT_FEATURE    "Web Client"        true)
    option(DIO_SCRAPERWEB_FEATURE   "Scraper Web"       true)
	
  endif()

endif()  


# --------------------------------------------------------------------
# Data Input/Output     

if(DIO_FEATURE)

  add_definitions(-DDIO_ACTIVE)

  option(DIO_DNSRESOLVED_FEATURE            "DNS Resolved"            true)
  option(DIO_WEBCLIENT_FEATURE              "Web Client"              true)
  option(DIO_SCRAPERWEB_FEATURE             "Scraper Web"             true)
  option(DIO_NOTIFICATIONS_MANAGER_FEATURE  "Notifications Manager"   true)
  

  if(DIO_WAKEONLAN_FEATURE)

    add_definitions(-DDIO_WAKEONLAN_ACTIVE)
    option(DIO_STREAMUDP_FEATURE "Stream UDP" true)

  endif()


  if(DIO_MPSSE_FEATURE)

    add_definitions(-DDIO_MPSSE_ACTIVE)
    option(DIO_STREAMUSB_FEATURE "Stream USB" true)

  endif()


  if(DIO_DNSRESOLVED_FEATURE)

    add_definitions(-DDIO_DNSRESOLVED_ACTIVE)
    option(DIO_STREAMUDP_FEATURE "Stream UDP" true)

  endif()


  if(DIO_SCRAPERWEB_FEATURE)

    add_definitions(-DDIO_SCRAPERWEB_ACTIVE)
    option(XFILE_XML_FEATURE      "XFile XML format"    true)
    option(XFILE_JSON_FEATURE     "XFile JSON format"   true)
    option(DIO_WEBCLIENT_FEATURE  "Web Client"          true)

  endif()


  if(DIO_CHECKCONNECTIONS_FEATURE) 

    add_definitions(-DDIO_CHECKCONNECTIONS_ACTIVE)
    option(DIO_PING_FEATURE "Ping" true)

  endif()


  if(DIO_NETWORKTINEPROTOCOL_FEATURE)

    add_definitions(-DDIO_NETWORKTINEPROTOCOL_ACTIVE)
    option(DIO_STREAMUDP_FEATURE "UDP" true)

  endif()


  if(DIO_DYNDNS_FEATURE)

    add_definitions(-DDIO_DYNDNS_ACTIVE)
    option(DIO_WEBCLIENT_FEATURE "Web Client" true)

  endif()


  if(DIO_WIFIMANAGERMODE_FEATURE)

    add_definitions(-DDIO_WIFIMANAGERMODE_ACTIVE)
    option(DIO_STREAMTCPIP_FEATURE "Stream TCPIP" true)
    
  endif()


  if(DIO_NOTIFICATIONS_MANAGER_FEATURE)

    add_definitions(-DDIO_NOTIFICATIONS_MANAGER_ACTIVE)
    
  endif()


  if(DIO_PING_FEATURE)

    add_definitions(-DDIO_PING_ACTIVE)
    option(DIO_STREAMICMP_FEATURE "ICMP" true) 

  endif()

  
  if(DIO_PROTOCOL_FEATURE)

    add_definitions(-DDIO_PROTOCOL_ACTIVE)
    option(DIO_STREAMCIPHER_FEATURE       "Stream Cipher"         true)
    option(DIO_STREAMUDP_FEATURE          "Stream UDP"            true)
    option(DIO_STREAMTCPIP_FEATURE        "Stream TCPIP"          true)
    option(CIPHER_SYMMETRIC_AES_FEATURE   "Cipher Symetric AES"   true)

   endif()


  if(DIO_PROTOCOL_CLI_BUS_FEATURE)

    add_definitions(-DDIO_PROTOCOL_CLI_BUS_ACTIVE)
    option(DIO_PROTOCOL_CLI_FEATURE "Protocol in CLI" true)

  endif()


  if(DIO_PROTOCOL_CLI_FEATURE)

    add_definitions(-DDIO_PROTOCOL_CLI_ACTIVE)
    option(DIO_STREAMCIPHER_FEATURE       "Stream Cipher"         true)   
    option(DIO_STREAMUART_FEATURE         "Stream UART"           true)
    option(DIO_STREAMUSB_FEATURE          "Stream USB"            true)
    option(DIO_STREAMTCPIP_FEATURE        "Stream TCPIP"          true)
    option(CIPHER_SYMMETRIC_AES_FEATURE   "Cipher Symetric AES"   true)

  endif()


  if(DIO_STREAMCIPHER_FEATURE)

    add_definitions(-DDIO_STREAMCIPHER_ACTIVE)
    option(HASH_FEATURE "Hash" true)
    option(CIPHER_SYMMETRIC_FEATURE "Cipher Symetric" true)

  endif()


  if(DIO_ALERTS_FEATURE)

    add_definitions(-DDIO_ALERTS_ACTIVE)
    option(DIO_ATCMD_FEATURE "AT Commands" true)
    option(DIO_SMTP_FEATURE "SMTP (email)" true) 
    option(DIO_WEBCLIENT_FEATURE "Web Client" true)
    option(DIO_STREAMUDP_FEATURE "Stream UDP" true)

  endif()


  if(DIO_SMTP_FEATURE)

    add_definitions(-DDIO_SMTP_ACTIVE)
    option(DIO_STREAMTCPIP_FEATURE "Stream TCPIP" true)

  endif()


  if(DIO_SNMP_FEATURE)

    add_definitions(-DDIO_SNMP_ACTIVE)

  endif()


  if(DIO_ATCMD_FEATURE)

    add_definitions(-DDIO_ATCMD_ACTIVE)
    option(DIO_STREAMUART_FEATURE "Stream UART" true)

  endif()


  if(DIO_NODEMANAGER_FEATURE)    

    add_definitions(-DDIO_NODEMANAGER_ACTIVE)
    option(DIO_NODES_FEATURE "Nodes modules" true)    

  endif()


  if(DIO_NODEITEMHANDLER_SENSORAM2315_FEATURE)    

    add_definitions(-DDIO_NODEITEMHANDLER_SENSORAM2315_ACTIVE)
    option(DIO_STREAM_FEATURE                   "Stream"                                  true)
    option(DIO_STREAMI2C_FEATURE                "Stream I2C"                              true) 
    option(DIO_STREAMI2C_TEMHUMSENSOR_AM2315_FEATURE  "I2C Temperature Humidity Sensor AM2315"  true) 
    option(DIO_NODES_FEATURE                    "Nodes modules"                           true)

  endif()


  if(DIO_NODEITEMHANDLER_GPIODIGITAL_FEATURE)

    add_definitions(-DDIO_NODEITEMHANDLER_GPIODIGITAL_ACTIVE)
    option(DIO_NODES_FEATURE "Nodes modules" true)   

  endif()
 

  if(DIO_NODES_FEATURE)    

    add_definitions(-DDIO_NODES_ACTIVE)
    option(XUUID_FEATURE "UUID functions" true)     

  endif()


  if(DIO_MODBUSCLIENT_FEATURE)

    add_definitions(-DDIO_MODBUSCLIENT_ACTIVE)
  
  endif()


  if(DIO_LEDNEOPIXELWS2812B_FEATURE)

    add_definitions(-DDIO_LEDNEOPIXELWS2812B_ACTIVE)
    
  endif()


  if(DIO_IEC60870_5_FEATURE)

    add_definitions(-DDIO_IEC60870_5_ACTIVE) 
    option(DIO_STREAMUART_FEATURE     "Stream UART"       true)
    option(DIO_STREAMTCPIP_FEATURE    "Stream TCPIP"      true)
  
  endif()


  if(DIO_OBEXPUSH_FEATURE)

    add_definitions(-DDIO_OBEXPUSH_ACTIVE)
    option(DIO_STREAMUART_FEATURE     "Stream UART"       true)
      
  endif()


  if(DIO_PCAP_FEATURE)

    add_definitions(-DDIO_PCAP_ACTIVE)

  endif()


  if(DIO_GPIO_FEATURE)

    add_definitions(-DDIO_GPIO_ACTIVE)

    if(DIO_GPIO_PCPARALLEL_FEATURE)

      add_definitions(-DDIO_GPIO_PCPARALLEL_ACTIVE)
  
    endif()

  endif()


  if(DIO_WEBCLIENT_FEATURE) 

    add_definitions(-DDIO_WEBCLIENT_ACTIVE)
    option(DIO_STREAMTCPIP_FEATURE  "TCPIP"      true)
    option(HASH_MD5_FEATURE         "Hash MD5"   true)

  endif()


  if(DIO_WEBSERVER_FEATURE)  

    add_definitions(-DDIO_WEBSERVER_ACTIVE)
    option(DIO_STREAMTCPIP_FEATURE    "TCPIP"             true)
    option(HASH_FEATURE               "HASH"              true)
    option(HASH_SHA1_FEATURE          "Hash SHA1"         true)
    option(XPROCESSMANAGER_FEATURE    "Process Manager"   true)

  endif()
 

  if(DIO_STREAMTLS_FEATURE)

    add_definitions(-DDIO_TLS_ACTIVE)
    option(DIO_STREAMTCPIP_FEATURE    "TCPIP"             true)
    option(HASH_FEATURE               "Hash"              true)
    option(CIPHER_SYMMETRIC_FEATURE   "Cipher Symetric"   true)
    option(CIPHER_ASYMMETRIC_FEATURE  "Cipher Asymetric"  true)

  endif()


  if(DIO_STREAMUART_FEATURE         OR 
     DIO_STREAMUSB_FEATURE          OR 
     DIO_STREAMICMP_FEATURE         OR 
     DIO_STREAMUDP_FEATURE          OR 
     DIO_STREAMCPIP_FEATURE         OR 
     DIO_STREAMBLUETOOTH_FEATURE    OR 
     DIO_STREAMBLUETOOTHLE_FEATURE  OR 
     DIO_STREAMSPI_FEATURE          OR 
     DIO_STREAMI2C_FEATURE)


    option(DIO_STREAM_FEATURE   "Stream"            true)
    option(XSLEEP_FEATURE       "Sleep functions"   true)
    option(XPUBLISHER_FEATURE   "XPublisher"        true)
    option(XFSMACHINE_FEATURE   "XFSMachine"        true)


    if(DIO_STREAMUART_FEATURE)

      add_definitions(-DDIO_STREAMUART_ACTIVE)

    endif()


    if(DIO_STREAMUSB_FEATURE)

      add_definitions(-DDIO_STREAMUSB_ACTIVE)

    endif()


    if(DIO_STREAMBLUETOOTH_FEATURE)

      add_definitions(-DDIO_STREAMBLUETOOTH_ACTIVE)  
      option(XUUID_FEATURE "UUID functions" true)

    endif()


    if(DIO_STREAMBLUETOOTHLE_FEATURE)

      add_definitions(-DDIO_STREAMBLUETOOTHLE_ACTIVE)

    endif()


    if(DIO_STREAMI2C_FEATURE)

      add_definitions(-DDIO_STREAMI2C_ACTIVE)  


      if(DIO_STREAMI2C_6AXISTRACKING_LSM303DLHC_FEATURE)

        add_definitions(-DDIO_STREAMI2C_6AXISTRACKING_LSM303DLHC_ACTIVE)  
  
      endif()


      if(DIO_STREAMI2C_6AXISTRACKING_BMI270_FEATURE)

        add_definitions(-DDIO_STREAMI2C_6AXISTRACKING_BMI270_ACTIVE)  
  
      endif()


      if(DIO_STREAMI2C_9AXISTRACKING_MPU9150_FEATURE)

        add_definitions(-DDIO_STREAMI2C_9AXISTRACKING_MPU9150_ACTIVE)  
  
      endif()


      if(DIO_STREAMI2C_ADDACONVERTER_PCF8591_FEATURE)

        add_definitions(-DDIO_STREAMI2C_ADDACONVERTER_PCF8591_ACTIVE)  
  
      endif()


      if(DIO_STREAMI2C_AIRQUALITY_CCS811_FEATURE)

        add_definitions(-DDIO_STREAMI2C_AIRQUALITY_CCS811_ACTIVE)    

      endif()


      if(DIO_STREAMI2C_EEPROM_24XXX_FEATURE)

        add_definitions(-DDIO_STREAMI2C_EEPROM_24XXX_ACTIVE)    
  
      endif()


      if(DIO_STREAMI2C_GPIO_MCP2317_FEATURE)

        add_definitions(-DDIO_STREAMI2C_GPIO_MCP2317_ACTIVE)    
  
      endif()


      if(DIO_STREAMI2C_GPIO_PCF8574_FEATURE)

        add_definitions(-DDIO_STREAMI2C_GPIO_PCF8574_ACTIVE)    
  
      endif()


      if(DIO_STREAMI2C_LIGHTSENSOR_TSL2561_FEATURE)

        add_definitions(-DDIO_STREAMI2C_LIGHTSENSOR_TSL2561_ACTIVE)    

      endif()


      if(DIO_STREAMI2C_OLEDDISPLAY_SSD1306_FEATURE)

        add_definitions(-DDIO_STREAMI2C_OLEDDISPLAY_SSD1306_ACTIVE)    
        option(DIO_DISPLAYDEVICE_FEATURE "Display Device" true)

      endif()


      if(DIO_STREAMI2C_PWMCONTROLER_PCA9685_FEATURE)

        add_definitions(-DDIO_STREAMI2C_PWMCONTROLER_PCA9685_ACTIVE)    

      endif()


      if(DIO_STREAMI2C_TEMHUMSENSOR_AM2315_FEATURE)

        add_definitions(-DDIO_STREAMI2C_TEMHUMSENSOR_AM2315_ACTIVE)    

      endif()


      if(DIO_STREAMI2C_TEMHUMSENSOR_SHT20_FEATURE)

        add_definitions(-DDIO_STREAMI2C_TEMHUMSENSOR_SHT20_ACTIVE)    
  
      endif()


      if(DIO_STREAMI2C_MONITORGAUGE_LTC2942_FEATURE)

        add_definitions(-DDIO_STREAMI2C_MONITORGAUGE_LTC2942_ACTIVE)    

      endif()


      if(DIO_STREAMI2C_BATTERYCHARGER_BQ24295_FEATURE)

        add_definitions(-DDIO_STREAMI2C_BATTERYCHARGER_BQ24295_ACTIVE)    

      endif()


      if(DIO_STREAMI2C_TOUCHSENSOR_AT42QT1060_FEATURE)

        add_definitions(-DDIO_STREAMI2C_TOUCHSENSOR_AT42QT1060_ACTIVE)    
  
      endif()
  
    endif()


    if(DIO_STREAMSPI_FEATURE)

      add_definitions(-DDIO_STREAMSPI_ACTIVE)
   

      if(DIO_STREAMSPI_GPIO_MCP23S17_FEATURE)
  
        add_definitions(-DDIO_STREAMSPI_GPIO_MCP23S17_ACTIVE)    

      endif()


      if(DIO_STREAMSPI_LCDDISPLAY_PCF8833_FEATURE)

        add_definitions(-DDIO_STREAMSPI_LCDDISPLAY_PCF8833_ACTIVE)    
        option(DIO_DISPLAYDEVICE_FEATURE "Display Device" true)

      endif()


      if(DIO_STREAMSPI_OLEDDISPLAY_SSD1306_FEATURE)

        add_definitions(-DDIO_STREAMSPI_OLEDDISPLAY_SSD1306_ACTIVE)    
        option(DIO_DISPLAYDEVICE_FEATURE "Display Device" true)
      
      endif()


      if(DIO_STREAMSPI_OLEDDISPLAY_SSD1331_FEATURE)

        add_definitions(-DDIO_STREAMSPI_OLEDDISPLAY_SSD1331_ACTIVE)    
        option(DIO_DISPLAYDEVICE_FEATURE "Display Device" true)

      endif()


      if(DIO_STREAMSPI_TFTDISPLAY_ILI9341_FEATURE)

        add_definitions(-DDIO_STREAMSPI_TFTDISPLAY_ILI9341_ACTIVE) 
        option(DIO_DISPLAYDEVICE_FEATURE "Display Device" true)

      endif()


      if(DIO_STREAMSPI_TFTDISPLAY_ST7789_FEATURE)

        add_definitions(-DDIO_STREAMSPI_TFTDISPLAY_ST7789_ACTIVE) 
        option(DIO_DISPLAYDEVICE_FEATURE "Display Device" true)

      endif()


      if(DIO_STREAMSPI_TOUCHSCREEN_STMPE610_FEATURE)

        add_definitions(-DDIO_STREAMSPI_TOUCHSCREEN_STMPE610_ACTIVE) 

      endif()

    endif()


    if(DIO_STREAMICMP_FEATURE)

      add_definitions(-DDIO_STREAMICMP_ACTIVE)

    endif()


    if(DIO_STREAMUDP_FEATURE)

      add_definitions(-DDIO_STREAMUDP_ACTIVE)
      option(HASH_FEATURE         "HASH"          true)
      option(HASH_CRC32_FEATURE   "Hash CRC32"    true)

    endif()


    if(DIO_STREAMTCPIP_FEATURE)

      add_definitions(-DDIO_STREAMTCPIP_ACTIVE)

    endif()


    if(DIO_STREAMWIFI_FEATURE)

      add_definitions(-DDIO_STREAMTWIFI_ACTIVE)

    endif()

  endif()


  if(DIO_DISPLAYDEVICE_FEATURE)  

    add_definitions(-DDIO_DISPLAYDEVICE_ACTIVE)

  endif()


  if(DIO_BUSPIRATE_FEATURE)

    add_definitions(-DDIO_BUSPIRATE_ACTIVE)

  endif()


  if(DIO_APPLICATIONUPDATE_FEATURE)
   
    option(XPROCESSMANAGER_FEATURE "Process Manager" true)

  endif()

endif()

# --------------------------------------------------------------------
# eXtended Utils
     

if(XTHREADCOLLECTED_FEATURE)

  add_definitions(-DXTHREADCOLLECTED_ACTIVE)    
  
endif()


if(XSERIALIZABLE_BINARY_FEATURE)

  add_definitions(-DXSERIALIZABLE_BINARY_ACTIVE)
  
endif()


if(XSERIALIZABLE_JSON_FEATURE)

  add_definitions(-DXSERIALIZABLE_JSON_ACTIVE)
  
endif()


if(XCONSOLE_FEATURE)

  add_definitions(-DXCONSOLE_ACTIVE) 
  option(XSLEEP_FEATURE "Sleep functions" true)

endif()


if(XSYSTEM_FEATURE)  

  add_definitions(-DXSYSTEM_ACTIVE)  

endif()


if(XFSMACHINE_FEATURE)

  add_definitions(-DXFSMACHINE_ACTIVE)  

endif()  


if(XSCHEDULER_FEATURE)

  add_definitions(-DXSCHEDULER_ACTIVE)  

endif()


if(XPUBLISHER_FEATURE)

  add_definitions(-DXPUBLISHER_ACTIVE)

endif()


if(XUUID_FEATURE)

  add_definitions(-DXUUID__ACTIVE)
  option(HASH_FEATURE "Hash" true)
  option(HASH_CRC32_FEATURE "Hash CRC32" true)

endif()

  
if(XLOG_FEATURE) 

  add_definitions(-DXLOG_ACTIVE)
  option(XFILE_FEATURE "XFile" true)
  option(XFILE_ZIP_FEATURE "XFile Zip format" true)
  
endif()


if(XTRANSLATION_FEATURE)

  add_definitions(-DXTRANSLATION_ACTIVE)
  option(XFILE_JSON_FEATURE "XFile JSON format" true)
  option(XTRANSLATION_GEN_FEATURE "Translation GEN" true)

endif()


if(XTRANSLATION_GEN_FEATURE)  

  add_definitions(-DXTRANSLATION_GEN_ACTIVE)

endif()


if(XSLEEP_FEATURE)

  add_definitions(-DXSLEEP_ACTIVE) 

endif()


if(XPROCESSMANAGER_FEATURE)

  add_definitions(-DXPROCESSMANAGER_ACTIVE)

endif()


if(XSHAREDMEMORYMANAGER_FEATURE)

  add_definitions(-DXSHAREDMEMORYMANAGER_ACTIVE)

endif()


if(XDRIVEIMAGEMANAGER_FEATURE)

  add_definitions(-DXDRIVEIMAGEMANAGER_ACTIVE)

endif()   


if(XEEPROMMEMORYMANAGER_FEATURE)

  add_definitions(-DXEEPROMMEMORYMANAGER_ACTIVE)

endif() 


if(XFILE_CFG_FEATURE) 

  add_definitions(-DXFILE_CFG_ACTIVE)
  option(XFILE_INI_FEATURE "XFile INI format" true)

endif()


if(XFILE_INI_FEATURE) 

  add_definitions(-DXFILE_INI_ACTIVE)
  option(XFILE_TXT_FEATURE "XFile Text format" true)

endif()


if(XFILE_ZIP_FEATURE) 

  add_definitions(-DXFILE_ZIP_ACTIVE)
  option(XFILE_FEATURE "XFile" true)   

endif()  
 

if(XFILE_XML_FEATURE) 

  add_definitions(-DXFILE_XML_ACTIVE)
  option(XFILE_TXT_FEATURE "XFile Text format" true)

endif()  
 

if(XFILE_JSON_FEATURE)  

  add_definitions(-DXFILE_JSON_ACTIVE) 
  option(XFILE_TXT_FEATURE "XFile Text format" true)

endif()


if(XFILE_RIFF_FEATURE) 

  add_definitions(-DXFILE_RIFF_ACTIVE)
  option(XFILE_FEATURE "XFile" true)     

endif()
  
  
if(XFILE_HEX_FEATURE)  

  add_definitions(-DXFILE_HEX_ACTIVE)
  option(XFILE_TXT_FEATURE "XFile Text format" true)

endif()
 

if(XFILE_DFU_FEATURE)  

  add_definitions(-DXFILE_DFU_ACTIVE)
  option(XFILE_FEATURE "XFile" true)     

endif()  


if(XFILE_TXT_FEATURE)

  add_definitions(-DXFILE_TXT_ACTIVE)
  option(XFILE_FEATURE "XFile" true)     

endif()  


if(XFILE_FEATURE)

  add_definitions(-DXFILE_ACTIVE)
  option(CIPHER_SYMMETRIC_FEATURE "Cipher" true)
  option(CIPHER_SYMMETRIC_FEATURE "Cipher Symetric" true)
  option(CIPHER_ASYMMETRIC_FEATURE "Cipher Asymetric" true)

endif()  


if(XASN1_FEATURE)

  add_definitions(-DXASN1_ACTIVE)

endif()


if(XLICENSE_FEATURE)
                   
  add_definitions(-DXLICENSE_ACTIVE)
  option(CIPHER_SYMMETRIC_FEATURE "Cipher Symetric" true)
  option(CIPHER_SYMMETRIC_AES_FEATURE "Cipher Symetric AES" true)
  option(HASH_SHA1_FEATURE "Hash SHA1" true)    
  option(HASH_SHA2_FEATURE "Hash SHA2" true)

endif()



# --------------------------------------------------------------------
# Cipher

if(CIPHER_ASYMMETRIC_FEATURE)  

  if(CIPHER_ASYMMETRIC_FILEKEY_PEM)

    add_definitions(-DCIPHERKEYSFILEPEM_ACTIVE)
    option(XASN1_FEATURE "ANS.1 functions" true)
  
  endif()

endif()


if(HASH_FEATURE)

  add_definitions(-DHASH_ACTIVE)

   
  if(HASH_CRC16_FEATURE)

    add_definitions(-DHASH_CRC16_ACTIVE)
  
  endif()

 
  if(HASH_CKS16_FEATURE)

    add_definitions(-DHASH_CKS16_ACTIVE)
  
  endif()

 
  if(HASH_CRC32_FEATURE)

    add_definitions(-DHASH_CRC32_ACTIVE)
  
  endif()

 
  if(HASH_MD5_FEATURE)

    add_definitions(-DHASH_MD5_ACTIVE)
  
  endif()

 
  if(HASH_SHA1_FEATURE)

    add_definitions(-DHASH_SHA1_ACTIVE)
  
  endif()

 
  if(HASH_SHA2_FEATURE)

    add_definitions(-DHASH_SHA2_ACTIVE)
  
  endif()

 
  if(HASH_COMP128V1_FEATURE)

    add_definitions(-DHASH_COMP128V1_ACTIVE)
  
  endif()

 
  if(HASH_WHIRLPOOL_FEATURE)

    add_definitions(-DHASH_WHIRLPOOL_ACTIVE)
  
  endif()   

endif()


if(CIPHER_SYMMETRIC_FEATURE)

  add_definitions(-DCIPHER_SYMMETRIC_ACTIVE)  

  if(CIPHER_SYMMETRIC_DES_FEATURE)

    add_definitions(-DCIPHER_SYMMETRIC_DES_ACTIVE)  

  endif()


  if(CIPHER_SYMMETRIC_AES_FEATURE)

    add_definitions(-DCIPHER_SYMMETRIC_AES_ACTIVE)
  
  endif()


  if(CIPHER_SYMMETRIC_BLOWFISH_FEATURE)

    add_definitions(-DCIPHER_SYMMETRIC_BLOWFISH_ACTIVE)
  
  endif()

endif()


if(CIPHER_ASYMMETRIC_FEATURE)  
 
  add_definitions(-DCIPHER_ASYMMETRIC_ACTIVE)

  if(CIPHER_ASYMMETRIC_RSA_FEATURE)

    add_definitions(-DCIPHER_ASYMMETRIC_RSA_ACTIVE)
 
    if(CIPHER_ASYMMETRIC_FILEKEY_GFK)
  
      add_definitions(-DCIPHER_ASYMMETRIC_FILEKEY_GFK_ACTIVE)
	
    endif()

    if(CIPHER_ASYMMETRIC_FILEKEY_PEM)
  
      add_definitions(-DCIPHER_ASYMMETRIC_FILEKEY_PEM_ACTIVE)
      option(XASN1_FEATURE "ANS.1 functions" true)
	
    endif()

  endif()

  if(CIPHER_ASYMMETRIC_CURVE25519_FEATURE)

    add_definitions(-DCIPHER_ASYMMETRIC_CURVE25519_ACTIVE)
  
  endif()

endif()


# --------------------------------------------------------------------
# Compress

if(COMPRESS_GZ_FEATURE)

  add_definitions(-DCOMPRESS_GZ_ACTIVE)
  option(COMPRESS_FEATURE "Compress" true)

endif()


if(COMPRESS_LZRW1KH_FEATURE)                                                              

  add_definitions(-DCOMPRESS_LZRW1KH_ACTIVE)
  option(COMPRESS_FEATURE "Compress" true)

endif()


if(COMPRESS_LZW_FEATURE)

  add_definitions(-DCOMPRESS_LZW_ACTIVE)
  option(COMPRESS_FEATURE "Compress" true)

endif()


if(COMPRESS_ZIP_FEATURE)

  add_definitions(-DCOMPRESS_ZIP_ACTIVE)
  option(COMPRESS_FEATURE "Compress" true)

endif()


if(COMPRESS_FEATURE)

  add_definitions(-DCOMPRESS_ACTIVE)
  
endif()



