# --------------------------------------------------------------------
# GEN_CMakeLists_Main_Sources_Linux.txt
# Main Part: Add Sources Linux
# --------------------------------------------------------------------


list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/MainProcLINUX.cpp")

 
if(GRP_FEATURE)  

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/GRPLINUXFactory.cpp")    
  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/GRPLINUXScreenX11.cpp")
  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/GRPLINUXScreenFrameBuffer.cpp")    

endif()


if(INP_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/INPLINUXFactory.cpp")
  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/INPLINUXDeviceID.cpp")

  if(LINUX_X11_FEATURE) 

    list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/INPLINUXDeviceKeyboardX11.cpp")
    list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/INPLINUXDeviceMouseX11.cpp")    

  else()

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/INPLINUXDeviceKeyboardDirect.cpp")
  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/INPLINUXDeviceMouseDirect.cpp")
  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/INPLINUXDeviceTouchScreenDirect.cpp")

  endif()     

endif()


if(INP_SIMULATE_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/INPLINUXSimulate.cpp")  

endif()


if(SND_FEATURE)
  
  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/SNDLINUXFactory.cpp")
      
endif()


if(DIO_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXFactory.cpp")

endif()


if(DIO_PING_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXPing.cpp")

endif()


if(DIO_STREAMUART_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamUART.cpp")  
  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamUARTLocalEnumDevices.cpp")

endif()


if(DIO_STREAMUSB_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamUSB.cpp")  
  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamUSBLocalEnumDevices.cpp")

endif()


if(DIO_STREAMI2C_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamI2C.cpp")    

endif()


if(DIO_STREAMSPI_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamSPI.cpp")    

endif()


if(DIO_STREAMICMP_FEATURE)
  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamICMP.cpp")
endif()


if(DIO_STREAMUDP_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamUDP.cpp")    

endif()


if(DIO_STREAMTCPIP_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamTCPIP.cpp") 
  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamIPLocalEnumDevices.cpp")

endif()


if(DIO_STREAMBLUETOOTH_FEATURE OR DIO_STREAMBLUETOOTHLE_FEATURE)            

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamBluetooth.cpp")
  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamBluetoothLocalEnumDevices.cpp")      

endif()


if(DIO_STREAMBLUETOOTH_FEATURE)            

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamBluetoothRemoteEnumDevices.cpp")

endif()


if(DIO_STREAMBLUETOOTHLE_FEATURE)            

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamBluetoothLERemoteEnumDevices.cpp")

endif()


if(DIO_STREAMWIFI_FEATURE)        

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXStreamWifiRemoteEnumDevices.cpp")

endif()


if(DIO_WIFIMANAGERMODE_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXWifiManagerMode.cpp")

endif()


if(DIO_PCAP_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXPCap.cpp")      

endif()


if(DIO_GPIO_FEATURE)    

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXGPIO.cpp")

  if((${TARGET} MATCHES "Raspberrypi") OR (${TARGET} MATCHES "Raspberrypi_64"))       

    list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXGPIORaspberryPi.cpp")

  endif()  

  if((${TARGET} MATCHES "ARM") OR (${TARGET} MATCHES "ARM_64"))       

    list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXGPIOARM.cpp")

  endif()  

  if(DIO_GPIO_PCPARALLEL_FEATURE)

    list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXGPIOPCParallel.cpp")

  endif()     

endif()


if(DIO_LEDNEOPIXELWS2812B_FEATURE)

  if((${TARGET} MATCHES "Raspberrypi") OR (${TARGET} MATCHES "Raspberrypi_64"))       

    list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXLedNeoPixelWS2812BRaspberryPi.cpp")

  endif()

endif()


if(DIO_LINUX_DBUS_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXDBus_XEvent.cpp")  
  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXDBus.cpp")  
 
  if(DIO_LINUX_NETWORKMANAGER_FEATURE)         

    list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/DIOLINUXNetworkManager.cpp")   

  endif()

endif()


list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXFactory.cpp")
list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXTrace.cpp")
list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXTimer.cpp")
list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXRand.cpp")
list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXDir.cpp")
list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXThread.cpp")

list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXDateTime.cpp")


if(XSYSTEM_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXSystem.cpp")

endif()


if(XSLEEP_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXSleep.cpp")

endif()


if(XCONSOLE_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXConsole.cpp")

endif()


if(XFILE_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXFile.cpp")

endif()


if(XPROCESSMANAGER_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXProcessManager.cpp")

endif()


if(XSHAREDMEMORYMANAGER_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXSharedMemoryManager.cpp")

endif()


if(XDRIVEIMAGEMANAGER_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXDriveImageManager.cpp")

endif()


if(XEEPROMMEMORYMANAGER_FEATURE)

  list(APPEND SOURCES_MODULES_LIST "${GEN_DIRECTORY_SOURCES_PLATFORMS_LINUX}/XLINUXEEPROMMemoryManager.cpp")

endif()





