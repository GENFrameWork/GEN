# --------------------------------------------------------------------
# GEN_CMakeLists_Libraries.txt
# Main Part: Warning (for compile) of GEN 
# --------------------------------------------------------------------


# --------------------------------------------------------------------
# Windows

if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")

  list(APPEND WARNINGS_WINDOWS "/wd4018")                              # warning C4018: '>': signed/unsigned mismatch
  list(APPEND WARNINGS_WINDOWS "/wd4091")                              # warning C4091: 'typedef ': ignored on left of 'xxx' when no variable is declared
  list(APPEND WARNINGS_WINDOWS "/wd4595")                              # warning C4595: 'xxx': non-member operator new or delete functions may not be declared inline
  list(APPEND WARNINGS_WINDOWS "/wd4996")                              # warning C4996: 'xxx': was declared deprecated
  list(APPEND WARNINGS_WINDOWS "/wd4624")                              # warning C4624: 'xxx' destructor was implicitly defined as deleted
    
  if(APPMODE_WINDOWS_DINAMIC)
  
    list(APPEND WARNINGS_WINDOWS "/wd4251")                            # warning C4251: needs to have dll-interface to be used by clients of class 'xxxxxxxx'
    
  endif()

 #list(APPEND WARNINGS_WINDOWS "/wd4172")                              # warning C4172: returning address of local variable or temporary: var 
  list(APPEND WARNINGS_WINDOWS "/wd5033")                              # warning C5033: 'register' is no longer a supported storage class
  
  add_compile_options(${WARNINGS_WINDOWS})    
    
endif()


# --------------------------------------------------------------------
# Linux

if(${CMAKE_SYSTEM_NAME} MATCHES "Linux")

  list(APPEND WARNINGS_LINUX "-Wreturn-local-addr")                    # warning: reference to local variable ‘var’ returned [-Wreturn-local-addr] 
  list(APPEND WARNINGS_LINUX "-Wno-deprecated")                        # warning: Eliminate warning of functions deprecated
  
  add_compile_options(${WARNINGS_LINUX})                  
  
endif()


# --------------------------------------------------------------------
# All platforms

if(COMPILE_WITH_CLANG)
 
  list(APPEND WARNINGS_CLANG "-Wno-invalid-source-encoding")
  list(APPEND WARNINGS_CLANG "-Wno-register")
  list(APPEND WARNINGS_CLANG "-Wno-unused-variable") 
  list(APPEND WARNINGS_CLANG "-Wno-unused-but-set-variable")
  list(APPEND WARNINGS_CLANG "-Wno-deprecated-non-prototype")
  list(APPEND WARNINGS_CLANG "-Wno-unused-function")
  list(APPEND WARNINGS_CLANG "-Wno-switch")
  list(APPEND WARNINGS_CLANG "-Wno-implicit-function-declaration")
  list(APPEND WARNINGS_CLANG "-Wno-reorder-ctor")

 #list(APPEND WARNINGS_CLANG "-Wno-writable-strings")
 #list(APPEND WARNINGS_CLANG "-Wno-delete-incomplete")
 #list(APPEND WARNINGS_CLANG "-Wno-microsoft-extra-qualification")
 #list(APPEND WARNINGS_CLANG "-Wno-comment")    
 
 #list(APPEND WARNINGS_CLANG "-ferror-limit=1000")
  
  add_compile_options(${WARNINGS_CLANG})  
  
 #message(STATUS "[GEN Warnings CLANG deactivated: ${WARNINGS_CLANG} ]")

endif()
