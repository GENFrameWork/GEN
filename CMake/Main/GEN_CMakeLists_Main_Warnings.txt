# --------------------------------------------------------------------
# GEN_CMakeLists_Libraries.txt
# Main Part: Warning (for compile) of GEN 
# --------------------------------------------------------------------


# --------------------------------------------------------------------
# Microsoft Compiler

if(COMPILE_WITH_MSVC)
  
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} /wd4018")                             # warning C4018: '>': signed/unsigned mismatch
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} /wd4091")                             # warning C4091: 'typedef ': ignored on left of 'xxx' when no variable is declared
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} /wd4595")                             # warning C4595: 'xxx': non-member operator new or delete functions may not be declared inline
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} /wd4996")                             # warning C4996: 'xxx': was declared deprecated
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} /wd4624")                             # warning C4624: 'xxx' destructor was implicitly defined as deleted
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} /wd5033")                             # warning C5033: The auto and register storage class keywords have been deprecated or removed from the C++ language.
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} /wd5030")                             # warning C5030: attribute 'xxx' is not recognized
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} /wd4065")                             # warning C4065: switch statement contains 'default' but no 'case' labels  
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} /wd4995")                             # warning C4995: 'xxx': name was marked as #pragma deprecated
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} /wd4293")                             # warning C4293: '>>': shift count negative or too big, undefined behavior
   
  if(APPMODE_WINDOWS_DINAMIC)

    set(WARNING_TO_BOTH "${WARNING_TO_BOTH} /w4251")                            # warning C4251: needs to have dll-interface to be used by clients of class 'xxxxxxxx'

  endif()

endif()



# --------------------------------------------------------------------
# Linux GNU GCC Compiler

if(COMPILE_WITH_GCC)

  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-deprecated")                     # warning: Eliminate warning of functions deprecated
  set(WARNING_TO_CPP  "${WARNING_TO_CPP}  -Wno-register")                       # warning: The use of the register keyword as storage class specifier has been deprecated in C++11 and removed in C++17

 #set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wreturn-local-addr")                 # warning: reference to local variable ‘var’ returned [-Wreturn-local-addr]   

endif()



# --------------------------------------------------------------------
# CLang Multiplaform Compiler

if(COMPILE_WITH_CLANG)

  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-invalid-source-encoding")
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-register")
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-unused-variable") 
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-unused-but-set-variable")
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-deprecated-non-prototype")
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-unused-function")
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-switch")
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-implicit-function-declaration")
  set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-reorder-ctor")

 #set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-writable-strings")
 #set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-delete-incomplete")
 #set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-microsoft-extra-qualification")
 #set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -Wno-comment")     
 #set(WARNING_TO_BOTH "${WARNING_TO_BOTH} -ferror-limit=1000")
    
endif()



set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS}   ${WARNING_TO_C}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${WARNING_TO_CPP}")
set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS}   ${WARNING_TO_BOTH}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${WARNING_TO_BOTH}")

message(STATUS "[GEN Warnings de-activated C + CPP: ${WARNING_TO_C} ${WARNING_TO_CPP} ${WARNING_TO_BOTH} ]")


