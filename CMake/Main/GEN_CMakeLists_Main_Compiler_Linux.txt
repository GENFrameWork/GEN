# --------------------------------------------------------------------
# GEN_CMakeLists_Main_Compiler_Linux.txt
# Main Part: Linux Compiler setup
# --------------------------------------------------------------------


if(LINUX_X11_FEATURE)    

  add_definitions(-DLINUX_X11_ACTIVE) 	

endif()


if(LINUX_VISUALSTUDIOCODEPAGE_FEATURE)  

  set(CMAKE_CXX_FLAGS "-finput-charset=CP1252")  
  
endif()


if(LINUX_VISUALSTUDIOUTF8_FEATURE)

  set(CMAKE_CXX_FLAGS "-finput-charset=UTF-8")

endif()



# ----------------------------------------
# PC 

if(COMPILE_FOR_LINUX_PC_64)  
  
  set(LINK_FLAGS "-Wl,--start-group")

endif()


# ----------------------------------------
# Platform Raspberry Pi 32

if(COMPILE_FOR_LINUX_ARM_RPI)     
        
  set(CMAKE_SYSTEM_NAME Linux)
  set(CMAKE_SYSTEM_PROCESSOR arm)
            
  set(RPI_ROOT    "/usr/rpi")
  set(RPI_TOOLS   "${RPI_ROOT}/tools/arm-bcm2708/arm-linux-gnueabihf")
  set(RPI_SYSROOT "${RPI_ROOT}/sysroot")

  set(CMAKE_C_COMPILER_LAUNCHER "ccache")
  set(CMAKE_CXX_COMPILER_LAUNCHER "ccache")

  list(APPEND GEN_INCLUDES_DIR_LIST "${RPI_SYSROOT}/usr/include/arm-linux-gnueabihf/")     
  
  set(CMAKE_C_COMPILER   "${RPI_TOOLS}/bin/arm-linux-gnueabihf-gcc")
  set(CMAKE_CXX_COMPILER "${RPI_TOOLS}/bin/arm-linux-gnueabihf-g++")
  set(CMAKE_CXX_FLAGS    "${CMAKE_CXX_FLAGS} -std=gnu++11")
 
  set(CMAKE_SYSROOT  ${RPI_SYSROOT})
 
   set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)

  set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
  set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
  set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)

  set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE armhf)

endif()


# ----------------------------------------
# Platform ARM 32

if(COMPILE_FOR_LINUX_ARM)    
  
  set(CMAKE_SYSTEM_PROCESSOR arm)  
                          
  set(ARM_TOOLS "/usr")
  list(APPEND GEN_INCLUDES_DIR_LIST "${ARM_TOOLS}/include/")   
  
  set(CMAKE_C_COMPILER_LAUNCHER "ccache")
  set(CMAKE_CXX_COMPILER_LAUNCHER "ccache")
 
  set(CMAKE_C_COMPILER   "${ARM_TOOLS}/bin/arm-linux-gnueabihf-gcc")
  set(CMAKE_CXX_COMPILER "${ARM_TOOLS}/bin/arm-linux-gnueabihf-g++")
           
  set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
 
  set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
  set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

endif() 


# ----------------------------------------
# Platform RPi/ARM 64

if(COMPILE_FOR_LINUX_ARM_64 OR COMPILE_FOR_LINUX_ARM_RPI_64)  

  if(COMPILE_FOR_LINUX_ARM_RPI_64)

    set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -fpermissive")
  
  endif()

  set(CMAKE_SYSTEM_PROCESSOR aarch64)  
                                    
  list(APPEND GEN_INCLUDES_DIR_LIST "/usr/include/")    
 
  set(ARM64_TOOLS "/usr")
  set(CMAKE_C_COMPILER   "${ARM64_TOOLS}/bin/aarch64-linux-gnu-gcc")
  set(CMAKE_CXX_COMPILER "${ARM64_TOOLS}/bin/aarch64-linux-gnu-g++")
     
  set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
 
  set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
  set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

endif()


# ----------------------------------------
# Compile clang LINUX

if(COMPILE_WITH_CLANG)

  set(CMAKE_C_FLAGS   "-fdeclspec --std=c++0x")
  set(CMAKE_CXX_FLAGS "-fdeclspec --std=c++0x")

endif()
  


