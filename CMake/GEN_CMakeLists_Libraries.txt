# --------------------------------------------------------------------
# GEN_CMakeLists_Libraries.txt
# Libraries of GEN 
# --------------------------------------------------------------------



# set_target_properties(${CMAKE_PROJECT_NAME} PROPERTIES ${DEFAULT_TARGET_PROPS})

# --------------------------------------------------------------------
# Windows

if(COMPILE_FOR_WINDOWS)  
 
  if(APP_CONSOLE_FEATURE)    

    set_target_properties(${CMAKE_PROJECT_NAME}  PROPERTIES LINK_FLAGS /SUBSYSTEM:CONSOLE)

  else()

    if(GRP_FEATURE)

      set_target_properties(${CMAKE_PROJECT_NAME}  PROPERTIES LINK_FLAGS /SUBSYSTEM:WINDOWS )
      
    endif()

  endif()


  if(XTRACE_FEATURE OR DIO_FEATURE)    

    target_link_libraries(${CMAKE_PROJECT_NAME} ws2_32) 
    target_link_libraries(${CMAKE_PROJECT_NAME} iphlpapi)       

  endif()


  if(XSYSTEM_FEATURE)          

    target_link_libraries(${CMAKE_PROJECT_NAME} secur32)      
    target_link_libraries(${CMAKE_PROJECT_NAME} powrprof)

  endif()


  if(DIO_STREAMUSB_FEATURE)      

    target_link_libraries(${CMAKE_PROJECT_NAME} setupapi)

  endif()  

  
  if(DIO_STREAMBLUETOOTH_FEATURE OR DIO_STREAMBLUETOOTHLE_FEATURE)      

    target_link_libraries(${CMAKE_PROJECT_NAME} bthprops.lib)

  endif()  


  if(SND_FEATURE)      

    target_link_libraries(${CMAKE_PROJECT_NAME} Winmm.lib)

  endif()


  if(DATABASES_SQL_MYSQL_FEATURE)    

    target_link_libraries(${CMAKE_PROJECT_NAME} libmysql.lib)

  endif()


  if(DATABASES_SQL_POSTGRESQL_FEATURE)

    target_link_libraries(${CMAKE_PROJECT_NAME} libpq.lib)

  endif() 


  if(DIO_PCAP_FEATURE)

    if(COMPILE_FOR_WINDOWS_PC_32)
    
      target_link_directories(${CMAKE_PROJECT_NAME} PUBLIC ${GEN_DIRECTORY_THIRDPARTYLIBRARIES_NPCAP_WINX32_LIB})

    endif()  

   
    if(COMPILE_FOR_WINDOWS_PC_64)
    
      target_link_directories(${CMAKE_PROJECT_NAME} PUBLIC ${GEN_DIRECTORY_THIRDPARTYLIBRARIES_NPCAP_WINX64_LIB})

    endif()  

  endif()  


endif()


# --------------------------------------------------------------------
# Linux

if(COMPILE_FOR_LINUX)
  
  if((COMPILE_FOR_LINUX_ARM_RPI) OR (COMPILE_FOR_LINUX_ARM_RPI64))   

    target_link_directories(${CMAKE_PROJECT_NAME} PUBLIC "${RPI_SYSROOT}/lib/arm-linux-gnueabihf"  "${RPI_SYSROOT}/usr/lib/arm-linux-gnueabihf")     

  endif() 

  target_link_libraries(${CMAKE_PROJECT_NAME} stdc++)  
  target_link_libraries(${CMAKE_PROJECT_NAME} pthread)  
  target_link_libraries(${CMAKE_PROJECT_NAME} rt)  
  target_link_libraries(${CMAKE_PROJECT_NAME} dl) 
  target_link_libraries(${CMAKE_PROJECT_NAME} m)     
  
  if(XSYSTEM_FEATURE)  

    target_link_libraries(${CMAKE_PROJECT_NAME} asound)    

  endif()


  if(DIO_STREAMUSB_FEATURE)

    target_link_libraries(${CMAKE_PROJECT_NAME} udev)  

  endif()


  if(DIO_STREAMBLUETOOTH_FEATURE OR DIO_STREAMBLUETOOTHLE_FEATURE)

    target_link_libraries(${CMAKE_PROJECT_NAME} bluetooth)

  endif()  


  if(DIO_STREAMWIFI_FEATURE)

    target_link_libraries(${CMAKE_PROJECT_NAME} iw)    

  endif()


  if(DIO_PCAP_FEATURE)   
 
    target_link_libraries(${CMAKE_PROJECT_NAME} pcap)

  endif()


  if(DATABASES_SQL_MYSQL_FEATURE)

    target_link_libraries(${CMAKE_PROJECT_NAME} mysqlclient)

  endif()


  if(DATABASES_SQL_POSTGRESQL_FEATURE)

    target_link_libraries(${CMAKE_PROJECT_NAME} pq)

  endif() 

  if(GRP_FEATURE)

    if(LINUX_X11_FEATURE)

      target_link_libraries(${CMAKE_PROJECT_NAME} X11)
      target_link_libraries(${CMAKE_PROJECT_NAME} Xext)
      target_link_libraries(${CMAKE_PROJECT_NAME} Xrandr)
      target_link_libraries(${CMAKE_PROJECT_NAME} Xxf86vm)

    endif()

  endif()


  if(DIO_LINUX_DBUS_FEATURE)

    target_link_libraries(${CMAKE_PROJECT_NAME} dbus-1)

  endif()


endif()


# ----------------------------------------
# Android
  
if(COMPILE_FOR_ANDROID)

  target_link_libraries(${CMAKE_PROJECT_NAME}  android log)
  
  
endif()


# ----------------------------------------
# Google Tests

if(GOOGLETEST_FEATURE)

  include(GoogleTest)

  if(GOOGLETEST_EXECFORDISCOVER_FEATURE)

    gtest_discover_tests(${CMAKE_PROJECT_NAME})

  endif()

endif()

